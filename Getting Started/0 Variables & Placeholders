For working with variables in TensorFlow, we have to use tf.variable()

The key thing to remember is that one has initialize all the variables by running 
      
      tf.initialize_all_variables()
      
before using the variables in a computational graph.

To define variables, use the command 

      tf.variable() 


state = tf.Variable(0)
Now you can perform anyting you want to do with the variable state. 

__________________________


Placeholders:

Think of placeholders as empty postboxes, they are just there. Unless the postman comes and puts the post/mail in it, they just chill there
.The mail boxes can come is various shapes and sizes. 
Placeholders in a similar fashion do not hold any values or do anything ,until the session is run. They can of various types.

Ex: 
            a=tf.placeholder(tf.float32)

See this link to understand all varities of supported placeholder types
https://www.tensorflow.org/versions/r0.9/resources/dims_types.html


Say you want to run a multiplication on a, and store it in b,

        b=a*2
But to get the results, you have to have a value of a being passed and a session being initialized and run.

          with tf.Session() as sess:
              result = sess.run(b,feed_dict={a:444})
              print result

you can almost always pass anything you want to, to a placeholder and do anything you want to with them.

a = tf.constant([7])
b = tf.constant([6])
c = tf.add(a,b)
d = tf.subtract(a,b)

with tf.Session() as session:
    result = session.run(c)
    print 'c =: %s' % result
    result = session.run(d)
    print 'd =: %s' % result
    
    
    

You can find more such similar cool operations here :
https://www.tensorflow.org/versions/r0.9/api_docs/python/index.html

